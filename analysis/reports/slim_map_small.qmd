---
title: "Landscape Generation"
format: html
editor: visual
---

## Load packages

```{r}
library(ENMeval)
library(raster)
library(here)
library(tidyverse)


source(here("R", "make_maps_fns.R"))
```

## Read in model and project

Read in localities

```{r}
#| label: localities

# read in as a data frame first
locs_df <- read_csv(here("analysis", "data", "enyalius_locs.csv")) %>% 
  # the variable names are messy
  janitor::clean_names() %>%
  filter(!is.na(latitude), !is.na(longitude),
         # remove localities that are only mapped to a Google Earth municipality. The reserve in the "GPS of the reserve" locality is barely a km, so that is acceptable error relative to the environmental resolution
         source_lat_long != "Google Earth municipality") %>%
  # there are some lat/longs with spaces. Need to fix this
  mutate(longitude = str_remove(longitude, "\\s"), 
         latitude = str_remove(latitude, "\\s")) %>% 
  # convert to numeric
  mutate(longitude = as.numeric(longitude),
         latitude = as.numeric(latitude))

# convert to sf for spatial operations
locs_sf <- st_as_sf(locs_df, 
                    coords = c("longitude", "latitude"),
                    crs = 4326) %>% 
  filter(species == "iheringii")

```

Read in model and environmental data for different time periods and project

```{r}
#| eval: false

ihe_proj <- raster(here("analysis", "output", "sdm_projections", "iheringii.tif"))

#| label: projections
sdm_ihe <- read_rds(here("analysis", "output", "sdm_models", "sdm_iheringii.rds"))
eval_mods_ihe <- sdm_ihe@models

names(eval_mods_ihe) <-
  str_replace_all(names(eval_mods_ihe), "\\.", "\\_")

mod_ihe <- eval_mods_ihe$rm_2_5_fc_L

predictors_bio <- list.files("/Users/connorfrench/Dropbox/Old_Mac/climate-data/chelsa_LGM_30sec", pattern = ".tif$", full.names = TRUE)

# need to rename bio_6 and bio_7 to bio_06 and bio_07
predictors_bio <- predictors[str_remove(basename(predictors), ".tif") %in% c("bio_6", "bio_7", "bio_13", "bio_14")] %>% 
  stack() %>% 
  raster::crop(ihe_proj) %>% 
  raster::mask(ihe_proj)

predictors_fc <- list.files(here("analysis", "data", "forest_cover"), full.names = TRUE) %>% 
  stack() %>% 
  raster::crop(ihe_proj) %>% 
  raster::mask(ihe_proj)

predictors_all <- stack(predictors_bio, predictors_fc)


names(predictors_all)[names(predictors_all) %in% c("bio_6", "bio_7")] <- c("bio_06", "bio_07")

names(predictors_all)[names(predictors_all) %in% c("X02_evergreen.broadleaf", "X03_deciduous.broadleaf", "X04_mixed")] <- c("fc_02_evergreen_broadleaf", "fc_03_deciduous_broadleaf", "fc_04_mixed")


lgm_proj <- predict(predictors_all, mod_ihe, type = "cloglog")
```

Write LGM projection to file

```{r}
#| eval: false

writeRaster(lgm_proj, here("analysis", "output", "sdm_projections", "iheringii_lgm.tif")) 
```

## Read in data

Iheringii SDM projection and localities.

```{r}
ihe_proj <- raster(here("analysis", "output", "sdm_projections", "iheringii.tif"))

ihe_proj_lgm <- raster(here("analysis", "output", "sdm_projections", "iheringii_lgm.tif"))

ihe_locs <- read_csv(here("analysis", "data", "enyalius_locs.csv")) %>% 
  janitor::clean_names() %>% 
  filter(species == "iheringii") %>% 
  select(site.name = loc_code, id_code, longitude, latitude) %>% 
  mutate(latitude = as.numeric(latitude)) %>% 
  group_by(site.name) %>% 
  summarize(sample.size = n(),
            longitude = min(longitude),
            latitude = min(latitude)) %>% 
  ungroup() %>% 
  mutate(code = row_number())

ihe_spdf <- SpatialPointsDataFrame(
    coords = ihe_locs[c("longitude", "latitude")],
    data = ihe_locs[setdiff(names(ihe_locs), c("longitude", "latitude"))],
    proj4string = CRS("+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
  )


plot(ihe_proj)
plot(ihe_spdf, add=TRUE)

```

## Aggregate raster

```{r}
ihe_agg <- raster::aggregate(ihe_proj, fact = 10)
ihe_lgm_agg <- raster::aggregate(ihe_proj_lgm, fact = 10)

plot(ihe_agg)
plot(ihe_spdf, add=TRUE)

plot(ihe_lgm_agg)
plot(ihe_spdf, add=TRUE)
```

Convert raster and locs to SLiM formatting and write to file

```{r}
ihe_slim <- xy_to_slim(ihe_locs, ihe_proj)

write_csv(ihe_slim, here("analysis", "slim", "sample_locs.csv"))
write_patches_slim(current_rast = ihe_proj, locs = ihe_locs)
write_patches_slim(current_rast = ihe_lgm_agg, locs = ihe_locs)
writeRaster(ihe_agg, here("analysis", "slim", "geo_layers", "iheringii_agg.tif"))

writeRaster(ihe_lgm_agg, here("analysis", "slim", "geo_layers", "iheringii_lgm_agg.tif"))
```

Get the resolution in km for SLiM

```{r}
get_slim_res(ihe_proj)
```

## Visualize aggregated vs original resolution

```{r}
#| label: rast-to-sf

ihe_proj_sf <- ihe_proj %>% 
  rasterToPolygons() %>% 
  st_as_sf()

ihe_agg_sf <- ihe_agg %>% 
  rasterToPolygons() %>% 
  st_as_sf()
```

```{r}
#| label: plot-full-vs-agg

ggplot() +
  geom_sf(data = ihe_proj_sf, aes(fill = iheringii, color = iheringii)) +
  scale_fill_viridis_c() +
  scale_color_viridis_c() +
  theme_bw() + 
  theme(axis.text = element_text(size = 24),
        axis.text.x = element_text(angle = 30))

ggplot() +
  geom_sf(data = ihe_agg_sf, aes(fill = iheringii, color = iheringii)) +
  scale_fill_viridis_c() +
  scale_color_viridis_c() +
  theme_bw() + 
  theme(axis.text = element_text(size = 24),
        axis.text.x = element_text(angle = 30))
```
